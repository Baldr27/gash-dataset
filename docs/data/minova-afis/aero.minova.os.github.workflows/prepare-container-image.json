{
  "prepare-container-image": {
    "2023-06-12T13-02-51Z": [
      {
        "region": {
          "startLine": 25,
          "startColumn": 9,
          "endLine": 29,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6.4](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-06-12T13-04-38Z": [
      {
        "region": {
          "startLine": 25,
          "startColumn": 9,
          "endLine": 29,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6.5](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-09-07T10-45-40Z": [
      {
        "region": {
          "startLine": 25,
          "startColumn": 9,
          "endLine": 29,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6.5](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-12-06T09-44-47Z": [],
    "2023-12-08T07-46-35Z": [],
    "2024-02-15T10-18-50Z": []
  },
  "metadata": {
    "2023-06-12T13-02-51Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6.4\n\n      - name: checkout repository\n        uses: actions/checkout@v3\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    },
    "2023-06-12T13-04-38Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6.5\n\n      - name: checkout repository\n        uses: actions/checkout@v3\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    },
    "2023-09-07T10-45-40Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6.5\n\n      - name: checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    },
    "2023-12-06T09-44-47Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v7.0.7\n\n      - name: checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    },
    "2023-12-08T07-46-35Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.0\n\n      - name: checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    },
    "2024-02-15T10-18-50Z": {
      "triggers": {
        "workflow_call": {
          "inputs": {
            "registry": {
              "description": "Container registry to be used, e.g. ghcr.io, docker.io",
              "type": "string",
              "default": "ghcr.io"
            }
          },
          "outputs": {
            "container-image": {
              "description": "Fully qualified name of the prepared container image",
              "value": "${{jobs.containerize.outputs.container-image}}"
            }
          }
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "containerize": 5
      },
      "line_count": 59,
      "workflow": "name: Prepare Container Image\n\non:\n  workflow_call:\n    inputs:\n      registry:\n        description: 'Container registry to be used, e.g. ghcr.io, docker.io'\n        type: string\n        default: 'ghcr.io'\n    outputs:\n      container-image:\n        description: \"Fully qualified name of the prepared container image\"\n        value: ${{jobs.containerize.outputs.container-image}}\n\njobs:\n  containerize:\n    runs-on: ubuntu-latest\n    outputs:\n      container-image: ${{steps.container-name-and-githash.outputs.container-image}}\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.1\n\n      - name: checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n\n      - name: get date\n        id: time\n        uses: boredland/get-time-action@2.0.0\n        with:\n          timeZone: UTC\n          format: 'YYYYMMDD'\n\n      - name: prepare container image name\n        id: container-name-and-githash\n        shell: bash\n        run: |\n          GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)\n          echo \"github_sha_short=$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n          echo \"container-image=${{inputs.registry}}/${{github.repository_owner}}/${{github.event.repository.name}}:${{ steps.time.outputs.time }}_$GITHUB_SHA_SHORT\" >> $GITHUB_OUTPUT\n\n      - name: build & push container image '${{ steps.container-name-and-githash.outputs.container-image }}'\n        if: steps.branch-name.outputs.ref_branch == 'main' && github.event_name != 'pull_request'\n        uses: mr-smithers-excellent/docker-build-push@v6\n        with:\n          image: ${{github.event.repository.name}}\n          addLatest: true\n          tags: ${{ steps.time.outputs.time }}_${{ steps.container-name-and-githash.outputs.github_sha_short }}, latest\n          dockerfile: ./Dockerfile\n          registry: ${{ inputs.registry }}\n          username: ${{ secrets.GHCR_USERNAME }}\n          password: ${{ secrets.GHCR_PASSWORD }}\n"
    }
  }
}