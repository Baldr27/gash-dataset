{
  "gh-branch-name-check": {
    "2024-05-15T11-28-52Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 15
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-06-21T13-19-34Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 18
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-07-09T19-10-38Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 18
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-07-10T21-10-11Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 18
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-09-30T17-02-26Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 18
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ]
  },
  "metadata": {
    "2024-05-15T11-28-52Z": {
      "triggers": {
        "pull_request": {
          "branches": [
            "develop",
            "main"
          ],
          "types": [
            "opened",
            "synchronize",
            "edited"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "check-branch-name": 8
      },
      "line_count": 71,
      "workflow": "name: Branch Name Check\n\non:\n  pull_request:\n    branches:\n      - develop\n      - main\n    types: [opened, synchronize, edited]\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check-branch-name:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Get branch names.\n      id: branch-names\n      uses: tj-actions/branch-names@v8\n\n    - name: Show Output result for source-branch and target-branch\n      run: |\n        echo \"source-branch=${{ steps.branch-names.outputs.head_ref_branch }}\"\n        echo \"target-branch=${{ steps.branch-names.outputs.base_ref_branch }}\"\n\n    - name: Check branch name for develop PRs\n      id: check-develop-branch\n      if: ${{ steps.branch-names.outputs.base_ref_branch == 'develop' }}\n      run: |\n        if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(feature/.*|docs/.*|bugfix/.*|hotfix/.*|release/[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n          echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Branches must follow the GitFlow naming convention.\" >> $GITHUB_OUTPUT\n        fi\n\n    - name: Check branch name for main PRs\n      id: check-main-branch\n      if: ${{ steps.branch-names.outputs.base_ref_branch == 'main' }}\n      run: |\n        if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(hotfix/.*|docs/.*|release/[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n          echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Pull requests must be from a hotfix or release branch.\" >> $GITHUB_OUTPUT\n        fi\n\n    - name: Check for existing comment\n      if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n      id: check-comment\n      run: |\n        commentExists=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body' | grep -F \"Invalid branch name\" || echo '')\n        if [[ -n \"$commentExists\" ]]; then\n          echo \"commentExists=true\" >> $GITHUB_OUTPUT\n        else\n          echo \"commentExists=false\" >> $GITHUB_OUTPUT\n        fi\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n    - name: Comment on PR for invalid branch name\n      if: steps.check-comment.outputs.commentExists == 'false'\n      run: |\n        reason=\"${{ steps.check-develop-branch.outputs.reason }}${{ steps.check-main-branch.outputs.reason }}\"\n        gh pr comment ${{ github.event.pull_request.number }} --body \"$reason Please review our [branch naming guidelines](https://github.com/OpenBB-finance/OpenBBTerminal/blob/develop/CONTRIBUTING.md#branch-naming-conventions).\"\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n    - name: Fail if branch name is invalid\n      if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n      run: |\n        echo \"Invalid branch name. Please review our branch naming guidelines.\"\n        exit 1"
    },
    "2024-06-21T13-19-34Z": {
      "triggers": {
        "pull_request": {
          "branches": [
            "develop",
            "main"
          ],
          "types": [
            "opened",
            "synchronize",
            "edited"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "check-branch-name": 8
      },
      "line_count": 71,
      "workflow": "name: Branch Name Check\n\non:\n  pull_request:\n    branches:\n      - develop\n      - main\n    types: [opened, synchronize, edited]\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check-branch-name:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Get branch names.\n        id: branch-names\n        uses: tj-actions/branch-names@v8\n\n      - name: Show Output result for source-branch and target-branch\n        run: |\n          echo \"source-branch=${{ steps.branch-names.outputs.head_ref_branch }}\"\n          echo \"target-branch=${{ steps.branch-names.outputs.base_ref_branch }}\"\n\n      - name: Check branch name for develop PRs\n        id: check-develop-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'develop' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(feature/.*|docs/.*|bugfix/.*|hotfix/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Branches must follow the GitFlow naming convention.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check branch name for main PRs\n        id: check-main-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'main' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(hotfix/.*|docs/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Pull requests must be from a hotfix or release branch.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check for existing comment\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        id: check-comment\n        run: |\n          commentExists=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body' | grep -F \"Invalid branch name\" || echo '')\n          if [[ -n \"$commentExists\" ]]; then\n            echo \"commentExists=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"commentExists=false\" >> $GITHUB_OUTPUT\n          fi\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Comment on PR for invalid branch name\n        if: steps.check-comment.outputs.commentExists == 'false'\n        run: |\n          reason=\"${{ steps.check-develop-branch.outputs.reason }}${{ steps.check-main-branch.outputs.reason }}\"\n          gh pr comment ${{ github.event.pull_request.number }} --body \"$reason Please review our [branch naming guidelines](https://github.com/OpenBB-finance/OpenBBTerminal/blob/develop/CONTRIBUTING.md#branch-naming-conventions).\"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Fail if branch name is invalid\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        run: |\n          echo \"Invalid branch name. Please review our branch naming guidelines.\"\n          exit 1\n"
    },
    "2024-07-09T19-10-38Z": {
      "triggers": {
        "pull_request": {
          "branches": [
            "develop",
            "main"
          ],
          "types": [
            "opened",
            "synchronize",
            "edited"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "check-branch-name": 8
      },
      "line_count": 71,
      "workflow": "name: Branch Name Check\n\non:\n  pull_request:\n    branches:\n      - develop\n      - main\n    types: [opened, synchronize, edited]\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check-branch-name:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Get branch names.\n        id: branch-names\n        uses: tj-actions/branch-names@v8\n\n      - name: Show Output result for source-branch and target-branch\n        run: |\n          echo \"source-branch=${{ steps.branch-names.outputs.head_ref_branch }}\"\n          echo \"target-branch=${{ steps.branch-names.outputs.base_ref_branch }}\"\n\n      - name: Check branch name for develop PRs\n        id: check-develop-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'develop' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(feature/.*|docs/.*|bugfix/.*|hotfix/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Branches must follow the GitFlow naming convention.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check branch name for main PRs\n        id: check-main-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'main' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(hotfix/.*|docs/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Pull requests must be from a hotfix or release branch.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check for existing comment\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        id: check-comment\n        run: |\n          commentExists=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body' | grep -F \"Invalid branch name\" || echo '')\n          if [[ -n \"$commentExists\" ]]; then\n            echo \"commentExists=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"commentExists=false\" >> $GITHUB_OUTPUT\n          fi\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Comment on PR for invalid branch name\n        if: steps.check-comment.outputs.commentExists == 'false'\n        run: |\n          reason=\"${{ steps.check-develop-branch.outputs.reason }}${{ steps.check-main-branch.outputs.reason }}\"\n          gh pr comment ${{ github.event.pull_request.number }} --body \"$reason Please review our [branch naming guidelines](https://github.com/OpenBB-finance/OpenBB/blob/develop/CONTRIBUTING.md#branch-naming-conventions).\"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Fail if branch name is invalid\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        run: |\n          echo \"Invalid branch name. Please review our branch naming guidelines.\"\n          exit 1\n"
    },
    "2024-07-10T21-10-11Z": {
      "triggers": {
        "pull_request": {
          "branches": [
            "develop",
            "main"
          ],
          "types": [
            "opened",
            "synchronize",
            "edited"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "check-branch-name": 8
      },
      "line_count": 71,
      "workflow": "name: Branch Name Check\n\non:\n  pull_request:\n    branches:\n      - develop\n      - main\n    types: [opened, synchronize, edited]\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check-branch-name:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Get branch names.\n        id: branch-names\n        uses: tj-actions/branch-names@v8\n\n      - name: Show Output result for source-branch and target-branch\n        run: |\n          echo \"source-branch=${{ steps.branch-names.outputs.head_ref_branch }}\"\n          echo \"target-branch=${{ steps.branch-names.outputs.base_ref_branch }}\"\n\n      - name: Check branch name for develop PRs\n        id: check-develop-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'develop' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(feature/.*|docs/.*|bugfix/.*|hotfix/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Branches must follow the GitFlow naming convention.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check branch name for main PRs\n        id: check-main-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'main' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(hotfix/.*|docs/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Pull requests must be from a hotfix or release branch.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check for existing comment\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        id: check-comment\n        run: |\n          commentExists=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body' | grep -F \"Invalid branch name\" || echo '')\n          if [[ -n \"$commentExists\" ]]; then\n            echo \"commentExists=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"commentExists=false\" >> $GITHUB_OUTPUT\n          fi\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Comment on PR for invalid branch name\n        if: steps.check-comment.outputs.commentExists == 'false'\n        run: |\n          reason=\"${{ steps.check-develop-branch.outputs.reason }}${{ steps.check-main-branch.outputs.reason }}\"\n          gh pr comment ${{ github.event.pull_request.number }} --body \"$reason Please review our [branch naming guidelines](https://docs.openbb.co/platform/developer_guide/github#branch-naming-conventions).\"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Fail if branch name is invalid\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        run: |\n          echo \"Invalid branch name. Please review our branch naming guidelines.\"\n          exit 1\n"
    },
    "2024-09-30T17-02-26Z": {
      "triggers": {
        "pull_request": {
          "branches": [
            "develop",
            "main"
          ],
          "types": [
            "opened",
            "synchronize",
            "edited"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "check-branch-name": 8
      },
      "line_count": 71,
      "workflow": "name: Branch Name Check\n\non:\n  pull_request:\n    branches:\n      - develop\n      - main\n    types: [opened, synchronize, edited]\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check-branch-name:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Get branch names.\n        id: branch-names\n        uses: tj-actions/branch-names@v8\n\n      - name: Show Output result for source-branch and target-branch\n        run: |\n          echo \"source-branch=${{ steps.branch-names.outputs.head_ref_branch }}\"\n          echo \"target-branch=${{ steps.branch-names.outputs.base_ref_branch }}\"\n\n      - name: Check branch name for develop PRs\n        id: check-develop-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'develop' && !github.event.pull_request.head.repo.fork }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(feature/.*|docs/.*|bugfix/.*|hotfix/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Branches must follow the GitFlow naming convention.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check branch name for main PRs\n        id: check-main-branch\n        if: ${{ steps.branch-names.outputs.base_ref_branch == 'main' }}\n        run: |\n          if ! [[ \"${{ steps.branch-names.outputs.head_ref_branch }}\" =~ ^(hotfix/.*|docs/.*|release/([a-zA-Z-]+-)?[0-9]+\\.[0-9]+\\.[0-9]+(rc[0-9]+)?)$ ]]; then\n            echo \"reason=Invalid branch name for a Pull Request to be merged to `${{ steps.branch-names.outputs.base_ref_branch }}` branch. Pull requests must be from a hotfix or release branch.\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Check for existing comment\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        id: check-comment\n        run: |\n          commentExists=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body' | grep -F \"Invalid branch name\" || echo '')\n          if [[ -n \"$commentExists\" ]]; then\n            echo \"commentExists=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"commentExists=false\" >> $GITHUB_OUTPUT\n          fi\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Comment on PR for invalid branch name\n        if: steps.check-comment.outputs.commentExists == 'false'\n        run: |\n          reason=\"${{ steps.check-develop-branch.outputs.reason }}${{ steps.check-main-branch.outputs.reason }}\"\n          gh pr comment ${{ github.event.pull_request.number }} --body \"$reason Please review our [branch naming guidelines](https://docs.openbb.co/platform/developer_guide/github#branch-naming-conventions).\"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Fail if branch name is invalid\n        if: ${{ steps.check-develop-branch.outputs.reason || steps.check-main-branch.outputs.reason }}\n        run: |\n          echo \"Invalid branch name. Please review our branch naming guidelines.\"\n          exit 1\n"
    }
  }
}