{
  "docker": {
    "2022-03-24T07-43-26Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 64,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 28,
          "startColumn": 9,
          "endLine": 33,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v2.1](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T07-49-58Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 67,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v2.1](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T07-58-09Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 67,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v2.1](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T08-19-00Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 68,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v2.1](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T08-51-26Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 69,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v2.1](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T09-37-18Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 15,
          "startColumn": 9,
          "endLine": 19,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T09-41-06Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 71,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 15,
          "startColumn": 9,
          "endLine": 19,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T09-43-29Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 69,
          "endColumn": 72
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-24T09-53-27Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 69,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 31,
          "startColumn": 9,
          "endLine": 36,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-25T06-05-24Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 118,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 80,
          "startColumn": 9,
          "endLine": 85,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-29T08-07-37Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 66,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 67,
          "startColumn": 5,
          "endLine": 139,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 89,
          "startColumn": 9,
          "endLine": 94,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-25T06-37-27Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 66,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 67,
          "startColumn": 5,
          "endLine": 127,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 89,
          "startColumn": 9,
          "endLine": 94,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-29T10-33-50Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 66,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 67,
          "startColumn": 5,
          "endLine": 149,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 89,
          "startColumn": 9,
          "endLine": 94,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-03-29T11-17-08Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 66,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 67,
          "startColumn": 5,
          "endLine": 151,
          "endColumn": 71
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 89,
          "startColumn": 9,
          "endLine": 94,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-04-10T01-22-35Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 66,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 67,
          "startColumn": 5,
          "endLine": 151,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 89,
          "startColumn": 9,
          "endLine": 94,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-04-23T21-52-01Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 73,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 74,
          "startColumn": 5,
          "endLine": 158,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 96,
          "startColumn": 9,
          "endLine": 101,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-05-16T08-09-46Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 77,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 78,
          "startColumn": 5,
          "endLine": 162,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 100,
          "startColumn": 9,
          "endLine": 105,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-07-20T11-55-38Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 77,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 78,
          "startColumn": 5,
          "endLine": 162,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 100,
          "startColumn": 9,
          "endLine": 105,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-07-20T11-35-32Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 77,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 78,
          "startColumn": 5,
          "endLine": 162,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 100,
          "startColumn": 9,
          "endLine": 105,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-20T03-03-07Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 84,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 85,
          "startColumn": 5,
          "endLine": 169,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 107,
          "startColumn": 9,
          "endLine": 112,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-20T02-41-52Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 77,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 78,
          "startColumn": 5,
          "endLine": 162,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 100,
          "startColumn": 9,
          "endLine": 105,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-20T03-26-58Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 76,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 77,
          "startColumn": 5,
          "endLine": 161,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 99,
          "startColumn": 9,
          "endLine": 104,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-20T04-34-41Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 87,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 88,
          "startColumn": 5,
          "endLine": 172,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 110,
          "startColumn": 9,
          "endLine": 115,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-20T05-08-28Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 87,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 88,
          "startColumn": 5,
          "endLine": 172,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 110,
          "startColumn": 9,
          "endLine": 115,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-21T07-44-39Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 93,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 94,
          "startColumn": 5,
          "endLine": 178,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 116,
          "startColumn": 9,
          "endLine": 121,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-26T23-28-43Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 99,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 37,
          "startColumn": 9,
          "endLine": 42,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-27T07-40-43Z": [
      {
        "region": {
          "startLine": 14,
          "startColumn": 5,
          "endLine": 99,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 37,
          "startColumn": 9,
          "endLine": 42,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-27T01-34-41Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 100,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 38,
          "startColumn": 9,
          "endLine": 43,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-08-28T07-08-32Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 100,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 38,
          "startColumn": 9,
          "endLine": 43,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-02T05-12-11Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 40,
          "startColumn": 9,
          "endLine": 45,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-04T07-56-35Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 101,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 39,
          "startColumn": 9,
          "endLine": 44,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-04T06-19-01Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 40,
          "startColumn": 9,
          "endLine": 45,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-04T08-56-58Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 101,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 39,
          "startColumn": 9,
          "endLine": 44,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-05T04-45-57Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 101,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 39,
          "startColumn": 9,
          "endLine": 44,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-09-05T06-47-14Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 96,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 34,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2022-12-04T02-43-16Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 96,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 34,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v5.2](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-01-02T06-49-17Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 96,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 34,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-04-23T04-28-52Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 100,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 38,
          "startColumn": 9,
          "endLine": 43,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-04-23T00-56-39Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 100,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 38,
          "startColumn": 9,
          "endLine": 43,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-04-23T07-02-22Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 96,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 34,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-07-22T13-26-47Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 91,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 33,
          "startColumn": 9,
          "endLine": 37,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-10-07T01-10-13Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 91,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 33,
          "startColumn": 9,
          "endLine": 37,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-10-12T06-21-14Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 93,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 35,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-10-12T08-06-22Z": [
      {
        "region": {
          "startLine": 12,
          "startColumn": 5,
          "endLine": 94,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 36,
          "startColumn": 9,
          "endLine": 40,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-10-13T10-52-42Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 93,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 35,
          "startColumn": 9,
          "endLine": 39,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2023-12-06T08-17-57Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 104,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2023-10-14T00-08-09Z": [
      {
        "region": {
          "startLine": 11,
          "startColumn": 5,
          "endLine": 104,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 46,
          "startColumn": 9,
          "endLine": 50,
          "endColumn": 7
        },
        "message": "The workflow is using a known vulnerable version ([v6](1)) of the [tj-actions/branch-names](2) action. Update it to [7.07](3)",
        "ruleId": "actions/vulnerable-action",
        "cwe": "CWE-1395",
        "precision": "high",
        "severity": "error",
        "security_severity": "7.5"
      }
    ],
    "2024-01-06T07-12-58Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-02-03T21-13-09Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-04-25T08-10-25Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-04-28T11-58-54Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-12-11T05-49-23Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2024-12-11T09-45-03Z": [
      {
        "region": {
          "startLine": 9,
          "startColumn": 5,
          "endLine": 102,
          "endColumn": 78
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ]
  },
  "metadata": {
    "2022-03-24T07-43-26Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 10
      },
      "line_count": 64,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch names\n        uses: tj-actions/branch-names@v2.1\n        id: branch-name\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \"./docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \"./docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T07-49-58Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 67,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch names\n        uses: tj-actions/branch-names@v2.1\n        id: branch-name\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \"./docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \"./docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T07-58-09Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 67,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch names\n        uses: tj-actions/branch-names@v2.1\n        id: branch-name\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T08-19-00Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 68,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch names\n        uses: tj-actions/branch-names@v2.1\n        id: branch-name\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: GIT_TAG:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T08-51-26Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 69,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch names\n        uses: tj-actions/branch-names@v2.1\n        id: branch-name\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: | \n            GIT_TAG:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T09-37-18Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 71,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Get branch names\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      - name: Checkout repository\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ steps.branch-names.outputs.head_ref_branch }}\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: | \n            GIT_TAG:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T09-41-06Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 71,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Get branch names\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      - name: Checkout repository\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ steps.branch-name.outputs.head_ref_branch }}\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: | \n            GIT_TAG:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T09-43-29Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 8
      },
      "line_count": 69,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n#      - name: Image name for jupyterlab\n#        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n#\n#      - name: Build jupyterlab image\n#        id: docker_build_jupyterlab\n#        uses: docker/build-push-action@v2\n#        with:\n#          file: \".docker/jupyterlab.dockerfile\"\n#          push: true\n#          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n#          cache-from: type=gha\n#          cache-to: type=gha\n#          build-args: |\n#            GIT_TAG:${{ steps.branch-name.outputs.current_branch }}\n#\n#      - name: Digest jupyterlab image\n#        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-24T09-53-27Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 11
      },
      "line_count": 69,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-25T06-05-24Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 19
      },
      "line_count": 118,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-29T08-07-37Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 9,
        "docker": 11
      },
      "line_count": 139,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Set nautilus_trader docker image name\n      - name: Image name for nautilus_trader\n        id: trader_image_name\n        uses: haya14busa/action-cond@v1\n        with:\n          cond: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n          if_true: echo \"::set-output name=tag::$(ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest)\"\n          if_false: echo \"::set-output name=tag::$(ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }})\"\n\n      # Build nautilus_trader docker image\n      - name: Build trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ${{ steps.trader_image_name.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Set jupyterlab docker image name\n      - name: Image name for jupyterlab\n        id: jupyterlab_image_name\n        uses: haya14busa/action-cond@v1\n        with:\n          cond: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n          if_true: echo \"::set-output name=tag::$(ghcr.io/${{ github.repository_owner }}/jupyterlab:latest)\"\n          if_false: echo \"::set-output name=tag::$(ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }})\"\n\n      # Build jupyterlab docker image\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ${{ steps.jupyterlab_image_name.outputs.tag }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.jupyterlab_image_name.outputs.tag }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-25T06-37-27Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 9,
        "docker": 11
      },
      "line_count": 127,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image\n      - name: Image name for trader\n        run: echo ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build nautilus_trader image\n        id: docker_build_trader\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image\n      - name: Image name for jupyterlab\n        run: echo ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Build jupyterlab image\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-29T10-33-50Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 9,
        "docker": 11
      },
      "line_count": 149,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (dev)\n      - name: Build nautilus_trader image (dev)\n        if: ${{ steps.branch-name.outputs.current_branch != 'master' }}\n        id: docker_build_trader\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      # Build nautilus_trader docker image (release)\n      - name: Build nautilus_trader image (release)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n\n      # Digest nautilus_trader image\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image (dev)\n      - name: Build jupyterlab image (dev)\n        if: ${{ steps.branch-name.outputs.current_branch != 'master' }}\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n\n      # Build jupyterlab docker image (release)\n      - name: Build jupyterlab image (release)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n\n      # Digest jupyterlab image\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-03-29T11-17-08Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 9,
        "docker": 11
      },
      "line_count": 151,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (dev)\n      - name: Build nautilus_trader image (dev)\n        if: ${{ steps.branch-name.outputs.current_branch != 'master' }}\n        id: docker_build_trader_dev\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n\n      # Digest nautilus_trader image\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader.outputs.digest }}\n\n      # Build jupyterlab docker image (dev)\n      - name: Build jupyterlab image (dev)\n        if: ${{ steps.branch-name.outputs.current_branch != 'master' }}\n        id: docker_build_jupyterlab_dev\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:${{ steps.branch-name.outputs.current_branch }}\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n\n      # Digest jupyterlab image\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab.outputs.digest }}\n"
    },
    "2022-04-10T01-22-35Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 9,
        "docker": 13
      },
      "line_count": 151,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-04-23T21-52-01Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 10,
        "docker": 13
      },
      "line_count": 158,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-05-16T08-09-46Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 11,
        "docker": 13
      },
      "line_count": 162,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n      - name: Run core tests\n        run: (cd nautilus_core && cargo test)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-07-20T11-55-38Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 10,
        "docker": 13
      },
      "line_count": 162,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-07-20T11-35-32Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 11,
        "docker": 13
      },
      "line_count": 162,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n      - name: Run core tests\n        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_with_integration\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-20T03-03-07Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 11,
        "docker": 13
      },
      "line_count": 169,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install and configure Poetry\n      - name: Install Poetry\n        uses: snok/install-poetry@v1.0.0\n        with:\n          version: 1.1.14\n          virtualenvs-create: true\n          virtualenvs-in-project: true\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: python -m pip install --upgrade pip setuptools wheel pre-commit\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-20T02-41-52Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 10,
        "docker": 13
      },
      "line_count": 162,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: |\n          python -m pip install --upgrade pip setuptools wheel poetry pre-commit nox\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cache-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cache-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cache-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-20T03-26-58Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 10,
        "docker": 13
      },
      "line_count": 161,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: hecrj/setup-rust-action@v1\n        with:\n          rust-version: stable\n          components: clippy\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: python -m pip install --upgrade pip setuptools wheel poetry nox pre-commit\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cached-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cached-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cached-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-20T04-34-41Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 11,
        "docker": 13
      },
      "line_count": 172,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: actions-rs/toolchain@v1\n        with:\n            toolchain: stable\n            override: true\n            components: rustfmt, clippy\n\n      # Cargo setup\n      - name: Set up cached Cargo\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.cargo/registry\n            ~/.cargo/git\n            target\n          key: ${{ runner.os }}-cargo-${{ hashFiles('**/nautilus_core/Cargo.lock') }}\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: python -m pip install --upgrade pip setuptools wheel poetry nox pre-commit\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cached-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.github/workflows/*.yml', '.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cached-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cached-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('.github/workflows/*.yml', '**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-20T05-08-28Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 11,
        "docker": 13
      },
      "line_count": 172,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: actions-rs/toolchain@v1\n        with:\n            toolchain: stable\n            override: true\n            components: rustfmt, clippy\n\n      # Cargo setup\n      - name: Set up Cargo cache\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.cargo/registry\n            ~/.cargo/git\n            target\n          key: ${{ runner.os }}-cargo-${{ hashFiles('**/nautilus_core/Cargo.lock') }}\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: python -m pip install --upgrade pip setuptools wheel poetry nox pre-commit\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cached-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cached-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cached-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run core tests\n#      - name: Run core tests\n#        run: (cd nautilus_core && cargo test --no-default-features)\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-21T07-44-39Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "build": 13,
        "docker": 13
      },
      "line_count": 178,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build:\n    name: build\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Rust setup\n      - name: Set up Rust environment\n        uses: actions-rs/toolchain@v1\n        with:\n            toolchain: stable\n            override: true\n            components: rustfmt, clippy\n\n      # Cargo setup\n      - name: Set up Cargo cache\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.cargo/registry\n            ~/.cargo/git\n            target\n          key: ${{ runner.os }}-cargo-${{ hashFiles('**/nautilus_core/Cargo.lock') }}\n\n      # Python setup\n      - name: Set up Python environment\n        uses: actions/setup-python@v2\n        with:\n          python-version: \"3.10\"\n\n      # Install build dependencies\n      - name: Install build dependencies\n        run: python -m pip install --upgrade pip setuptools wheel poetry nox pre-commit\n\n      # Setup cached pre-commit\n      - name: Setup cached pre-commit\n        id: cached-pre-commit\n        uses: actions/cache@v2\n        with:\n          path: ~/.cache/pre-commit\n          key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-\n\n      # Run pre-commit\n      - name: Run pre-commit\n        run: pre-commit run --all-files\n\n      # Setup Poetry caching\n      - name: Get Poetry cache dir\n        id: cached-poetry\n        run: echo \"::set-output name=dir::$(poetry config cache-dir)\"\n\n      - name: Poetry/Nox cache\n        uses: actions/cache@v2\n        with:\n          path: ${{ steps.cached-poetry.outputs.dir }}\n          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-${{ matrix.python-version }}-poetry-\n\n      # Install and run database dependencies\n      - name: Install Redis\n        run: |\n          sudo apt-get install redis-server\n          redis-server --daemonize yes\n\n      # Run nautilus_core checks\n      - name: Run nautilus_core cargo checks\n        run: |\n          (cd nautilus_core && cargo fmt --all -- --check)\n          (cd nautilus_core && cargo clippy -- -D warnings)\n\n      # Run nautilus_core tests\n      - name: Run nautilus_core cargo tests\n        run: make cargo-test\n\n      # Run tests\n      - name: Run tests\n        run: nox -rs tests_all\n\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-26T23-28-43Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "master",
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 13
      },
      "line_count": 99,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ master, develop ]\n    types:\n      - completed\n\njobs:\n  docker:\n    needs: [ build ]\n    name: build-docker-images\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-27T07-40-43Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 13
      },
      "line_count": 99,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    types:\n      - completed\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-27T01-34-41Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "master",
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 13
      },
      "line_count": 100,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ master, develop ]\n    types:\n      - completed\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-08-28T07-08-32Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        },
        "workflow_run": {
          "workflows": [
            "build - Python 3.10 (x86 ubuntu-latest)"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "docker": 13
      },
      "line_count": 100,
      "workflow": "name: docker\n\n# Build and push NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n  workflow_run:\n    workflows: [\"build - Python 3.10 (x86 ubuntu-latest)\"]\n    types:\n      - completed\n\njobs:\n  docker:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-02T05-12-11Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "master",
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 102,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ master, develop ]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    needs: build\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-04T07-56-35Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "master",
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 101,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ master, develop ]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-04T06-19-01Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 102,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ develop ]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    needs: build\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-04T08-56-58Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 101,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ develop ]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-05T04-45-57Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 101,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [ develop ]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    # if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-09-05T06-47-14Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 96,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [ master, develop ]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2022-12-04T02-43-16Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 96,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v5.2\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-01-02T06-49-17Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 96,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-04-23T04-28-52Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 100,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [develop]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-04-23T00-56-39Z": {
      "triggers": {
        "workflow_run": {
          "workflows": [
            "build"
          ],
          "branches": [
            "master",
            "develop"
          ],
          "types": [
            "completed"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 100,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  workflow_run:\n    workflows:\n      - build\n    branches: [master, develop]\n    types:\n      - completed\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-04-23T07-02-22Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 96,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      # Build docker images\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      # Build nautilus_trader docker image (develop)\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      # Build nautilus_trader docker image (latest)\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      # Build jupyterlab docker image (develop)\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      # Build jupyterlab docker image (latest)\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-07-22T13-26-47Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 91,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-10-07T01-10-13Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 91,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v1\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to GHCR\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v2\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-10-12T06-21-14Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 93,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-10-12T08-06-22Z": {
      "triggers": {
        "push": {
          "branches": [
            "test-docker"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 94,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    # branches: [master, develop]\n    branches: [test-docker]  # Temporarily disable for testing\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-10-13T10-52-42Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 13
      },
      "line_count": 93,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-12-06T08-17-57Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 104,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Free Disk Space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v7.0.7\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2023-10-14T00-08-09Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "develop"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 104,
      "workflow": "name: docker\n\n# Build NautilusTrader docker images\n\non:\n  push:\n    branches: [master, develop]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Free Disk Space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v6\n\n      - name: Build nautilus_trader image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_trader_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:develop\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_develop.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (develop)\n        if: ${{ steps.branch-name.outputs.current_branch == 'develop' }}\n        id: docker_build_jupyterlab_develop\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:develop\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_develop.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-01-06T07-12-58Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Free Disk Space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v7.0.7\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-02-03T21-13-09Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Free disk space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v7.0.7\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-04-25T08-10-25Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Free disk space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3.1\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.1\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-04-28T11-58-54Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Free disk space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3.1.0\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.1\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-12-11T05-49-23Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly-pause"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly-pause]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Free disk space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3.1.0\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.1\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    },
    "2024-12-11T09-45-03Z": {
      "triggers": {
        "push": {
          "branches": [
            "master",
            "nightly"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "build-docker-images": 14
      },
      "line_count": 102,
      "workflow": "name: docker\n\non:\n  push:\n    branches: [master, nightly]\n\njobs:\n  build-docker-images:\n    name: build-docker-images\n    runs-on: ubuntu-latest\n    env:\n      BUILD_MODE: release\n\n    steps:\n      - name: Free disk space (Ubuntu)\n        uses: jlumbroso/free-disk-space@main\n        with:\n          tool-cache: true\n          android: false\n          dotnet: false\n          haskell: false\n          large-packages: true\n          docker-images: true\n          swap-storage: true\n\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 1\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n\n      - name: Login to GHCR\n        uses: docker/login-action@v3.1.0\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.PACKAGES_TOKEN }}\n\n      - name: Get branch name\n        id: branch-name\n        uses: tj-actions/branch-names@v8.0.1\n\n      - name: Build nautilus_trader image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_trader_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_nightly.outputs.digest }}\n\n      - name: Build nautilus_trader image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_trader_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/nautilus_trader.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/nautilus_trader:latest\n          cache-from: type=gha\n          cache-to: type=gha\n      - name: Digest nautilus_trader image\n        run: echo ${{ steps.docker_build_trader_latest.outputs.digest }}\n\n      - name: Build jupyterlab image (nightly)\n        if: ${{ steps.branch-name.outputs.current_branch == 'nightly' }}\n        id: docker_build_jupyterlab_nightly\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:nightly\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=${{ steps.branch-name.outputs.current_branch }}\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_nightly.outputs.digest }}\n\n      - name: Build jupyterlab image (latest)\n        if: ${{ steps.branch-name.outputs.current_branch == 'master' }}\n        id: docker_build_jupyterlab_latest\n        uses: docker/build-push-action@v5\n        with:\n          file: \".docker/jupyterlab.dockerfile\"\n          push: true\n          tags: ghcr.io/${{ github.repository_owner }}/jupyterlab:latest\n          cache-from: type=gha\n          cache-to: type=gha\n          build-args: |\n            GIT_TAG=latest\n      - name: Digest jupyterlab image\n        run: echo ${{ steps.docker_build_jupyterlab_latest.outputs.digest }}\n"
    }
  }
}