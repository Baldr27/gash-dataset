{
  "release": {
    "2021-02-06T07-41-09Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 120,
          "endColumn": 133
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-06T08-31-59Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 121,
          "endColumn": 134
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-06T08-38-43Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 121,
          "endColumn": 134
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-06T14-39-09Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 126,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-07T07-28-29Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 125,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-08T04-24-15Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 125,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-10T02-01-07Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 125,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-11T09-02-54Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-11T11-09-08Z": [
      {
        "region": {
          "startLine": 19,
          "startColumn": 5,
          "endLine": 117,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-02-27T06-44-46Z": [
      {
        "region": {
          "startLine": 19,
          "startColumn": 5,
          "endLine": 117,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-03-26T02-40-08Z": [
      {
        "region": {
          "startLine": 20,
          "startColumn": 5,
          "endLine": 118,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-03-26T02-46-01Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-04-05T14-41-26Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-05-25T04-25-53Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-05-31T08-14-51Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": null,
          "endColumn": 5
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-05-31T08-20-09Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-06-19T15-58-27Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-07-28T03-45-43Z": [
      {
        "region": {
          "startLine": 18,
          "startColumn": 5,
          "endLine": 116,
          "endColumn": 63
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-09-01T05-47-02Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 108,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-09-18T10-29-44Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 76,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-09-22T10-22-16Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 80,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-11-02T15-10-32Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 80,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-01-10T23-27-23Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 76,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2021-12-18T09-12-50Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 81,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-06-07T02-40-13Z": [
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 76,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-07-19T16-30-16Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 111,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 14,
          "startColumn": 5,
          "endLine": 109,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 112,
          "startColumn": 5,
          "endLine": 261,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 110,
          "startColumn": 5,
          "endLine": 265,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 262,
          "startColumn": 5,
          "endLine": 280,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 266,
          "startColumn": 5,
          "endLine": 284,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 10,
          "startColumn": 5,
          "endLine": 76,
          "endColumn": 60
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-11-27T15-25-18Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 257,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 258,
          "startColumn": 5,
          "endLine": 276,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 261,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 261,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 262,
          "startColumn": 5,
          "endLine": 280,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 111,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 112,
          "startColumn": 5,
          "endLine": 278,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 257,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 258,
          "startColumn": 5,
          "endLine": 276,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 262,
          "startColumn": 5,
          "endLine": 280,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 261,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 262,
          "startColumn": 5,
          "endLine": 280,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-10-19T15-30-20Z": [
      {
        "region": {
          "startLine": 16,
          "startColumn": 5,
          "endLine": 112,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 113,
          "startColumn": 5,
          "endLine": 263,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 264,
          "startColumn": 5,
          "endLine": 282,
          "endColumn": 65
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-11-29T07-24-46Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 41,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 42,
          "startColumn": 5,
          "endLine": 143,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 144,
          "startColumn": 5,
          "endLine": 315,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2022-11-29T07-27-37Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 41,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 42,
          "startColumn": 5,
          "endLine": 146,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 147,
          "startColumn": 5,
          "endLine": 324,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2023-02-20T23-56-20Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 41,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 42,
          "startColumn": 5,
          "endLine": 146,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 147,
          "startColumn": 5,
          "endLine": 324,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2023-05-02T15-17-48Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 41,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 42,
          "startColumn": 5,
          "endLine": 158,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 159,
          "startColumn": 5,
          "endLine": 336,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ],
    "2023-06-16T12-40-46Z": [
      {
        "region": {
          "startLine": 15,
          "startColumn": 5,
          "endLine": 41,
          "endColumn": 3
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      },
      {
        "region": {
          "startLine": 42,
          "startColumn": 5,
          "endLine": 168,
          "endColumn": 66
        },
        "message": "Actions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}",
        "ruleId": "actions/missing-workflow-permissions",
        "cwe": "CWE-275",
        "precision": "high",
        "severity": "warning",
        "security_severity": "5.0"
      }
    ]
  },
  "metadata": {
    "2021-02-06T07-41-09Z": {
      "triggers": {
        "release": {
          "types": [
            "created",
            "prereleased"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 19
      },
      "line_count": 120,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created, prereleased ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --info --stacktrace\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n"
    },
    "2021-02-06T08-31-59Z": {
      "triggers": {
        "release": {
          "types": [
            "created",
            "prereleased"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 18
      },
      "line_count": 121,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created, prereleased ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n#      TEMP DISABLE\n#      - name: Publish Gradle plugin\n#        run: >\n#          ./gradlew\n#          :mirai-console-gradle:publishPlugins --info --stacktrace\n#          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n#          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n"
    },
    "2021-02-06T08-38-43Z": {
      "triggers": {
        "release": {
          "types": [
            "created",
            "prereleased"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 18
      },
      "line_count": 121,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created, prereleased ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n#      TEMP DISABLE\n#      - name: Publish Gradle plugin\n#        run: >\n#          ./gradlew\n#          :mirai-console-gradle:publishPlugins --info --stacktrace\n#          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n#          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n"
    },
    "2021-02-06T14-39-09Z": {
      "triggers": {
        "release": {
          "types": [
            "created",
            "prereleased"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 19
      },
      "line_count": 126,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created, prereleased ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n#      TEMP DISABLE\n#      - name: Publish Gradle plugin\n#        run: >\n#          ./gradlew\n#          :mirai-console-gradle:publishPlugins --info --stacktrace\n#          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n#          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-07T07-28-29Z": {
      "triggers": {
        "release": {
          "types": [
            "created",
            "prereleased"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 125,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created, prereleased ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --info --stacktrace\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-08T04-24-15Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 125,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --info\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --info --stacktrace\n\n      - name: Assemble\n        run: ./gradlew assemble --info --stacktrace\n\n      - name: Check\n        run: ./gradlew check --info --stacktrace\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --info --stacktrace\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --info --stacktrace\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --info --stacktrace\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-10T02-01-07Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 125,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: >\n          ./gradlew\n          :mirai-core-utils:ensureBintrayAvailable\n          :mirai-core-api:ensureBintrayAvailable\n          :mirai-core:ensureBintrayAvailable\n          :mirai-console:ensureBintrayAvailable\n          :mirai-core-utils:ensureMavenCentralAvailable\n          :mirai-core-api:ensureMavenCentralAvailable\n          :mirai-core:ensureMavenCentralAvailable\n          :mirai-console:ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-11T09-02-54Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-11T11-09-08Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*",
            "*-release"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 117,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive --remote\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-02-27T06-44-46Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*",
            "*-release"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 117,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-03-26T02-40-08Z": {
      "triggers": {
        "release": {
          "types": [
            "created"
          ]
        },
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 118,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  release:\n    types: [ created ]\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-03-26T02-46-01Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: ./gradlew check --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-04-05T14-41-26Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n          echo \"$BINTRAY_USER\" > build-secret-keys/bintray.key\n          echo \"$BINTRAY_KEY\" >> build-secret-keys/bintray.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureBintrayAvailable ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble -Pmirai.pkc.check.enable --scan\n\n      - name: Check\n        run: ./gradlew check -Pmirai.pkc.check.enable --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-05-25T04-25-53Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 112,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble -Pmirai.pkc.check.enable --scan\n\n      - name: Check\n        run: ./gradlew check -Pmirai.pkc.check.enable --scan\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-05-31T08-14-51Z": {
      "triggers": {},
      "num_jobs": 0,
      "steps_per_job": {},
      "line_count": 116,
      "workflow": null,
      "parse_error": "while scanning a simple key\n  in \"<unicode string>\", line 65, column 9:\n            ./gradlew check -Pmirai.pkc.chec ... \n            ^\ncould not find expected ':'\n  in \"<unicode string>\", line 66, column 9:\n            -Dmirai.debug.network.show.all.c ... \n            ^"
    },
    "2021-05-31T08-20-09Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble -Pmirai.pkc.check.enable --scan\n\n      - name: Check\n        run: >\n          ./gradlew check -Pmirai.pkc.check.enable --scan\n          -Dmirai.debug.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.debug.network.show.packet.details=true\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-06-19T15-58-27Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.debug.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.debug.network.show.packet.details=true\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-07-28T03-45-43Z": {
      "triggers": {
        "push": {
          "tags": [
            "*-dev*",
            "*-release",
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 116,
      "workflow": "# This is a basic workflow to help you get started with Actions\n\nname: Release Publish\n\n# Controls when the action will run. Triggers the workflow on push or pull request \n# events but only for the master branch\non:\n  push:\n    tags:\n      - '*-dev*'\n      - '*-release'\n      - 'v*'\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeAndReleaseRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeAndReleaseRepository --info\n"
    },
    "2021-09-01T05-47-02Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 20
      },
      "line_count": 108,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n\n      - name: Gradle :mirai-core-utils:publish\n        run: >\n          ./gradlew :mirai-core-utils:publish --scan --scan\n\n      - name: Gradle :mirai-core-api:publish\n        run: >\n          ./gradlew :mirai-core-api:publish --scan --scan\n\n      - name: Gradle :mirai-core:publish\n        run: >\n          ./gradlew :mirai-core:publish --scan --scan\n\n      - name: Gradle :mirai-core-all:publish\n        run: >\n          ./gradlew :mirai-core-all:publish --info --scan\n\n      - name: Gradle :mirai-console:publish\n        run: >\n          ./gradlew\n          :mirai-console:publish --info --scan\n\n      - name: Gradle :mirai-console-terminal:publish\n        run: >\n          ./gradlew\n          :mirai-console-terminal:publish --info --scan\n\n      - name: Gradle :mirai-console-compiler-common:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-common:publish --info --scan\n\n      - name: Gradle :mirai-console-compiler-annotations:publish\n        run: >\n          ./gradlew\n          :mirai-console-compiler-annotations:publish --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2021-09-18T10-29-44Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 13
      },
      "line_count": 76,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2021-09-22T10-22-16Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 14
      },
      "line_count": 80,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2021-11-02T15-10-32Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 14
      },
      "line_count": 80,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Set up JDK 1.8\n        uses: actions/setup-java@v1\n        with:\n          java-version: 1.8\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --no-parallel --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2022-01-10T23-27-23Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 13
      },
      "line_count": 76,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Setup JDK 11\n        uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt'\n          java-version: '11'\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --no-parallel --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2021-12-18T09-12-50Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 14
      },
      "line_count": 81,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Setup JDK 11\n        uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt'\n          java-version: '11'\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: fillBuildConstants\n        run: >\n          ./gradlew\n          fillBuildConstants --scan\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --no-parallel --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2022-06-07T02-40-13Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 13
      },
      "line_count": 76,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Setup JDK 11\n        uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt'\n          java-version: '11'\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan --no-parallel\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --no-parallel --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2022-07-19T16-30-16Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ]
        }
      },
      "num_jobs": 1,
      "steps_per_job": {
        "publish-mirai": 13
      },
      "line_count": 76,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n\njobs:\n  publish-mirai:\n    runs-on: macos-12 # 14G memory\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Checkout submodules\n        run: git submodule update --init --recursive\n\n      - name: Setup JDK 11\n        uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt'\n          java-version: '11'\n\n      - name: chmod -R 777 *\n        run: chmod -R 777 *\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Init gradle project\n        run: ./gradlew clean --scan\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable\n\n      - name: Assemble\n        run: ./gradlew assemble --scan\n\n      - name: Check\n        run: >\n          ./gradlew check --scan --no-parallel\n          -Dmirai.network.show.all.components=true\n          -Dkotlinx.coroutines.debug=on\n          -Dmirai.network.show.packet.details=true\n      \n      - name: Ensure all compilations completed before publish\n        run: >\n          ./gradlew publishToMavenLocal --info --scan\n\n      - name: Publish all artifacts\n        run: >\n          ./gradlew publish --no-parallel --info --scan\n\n      - name: Publish Gradle plugin\n        run: >\n          ./gradlew\n          :mirai-console-gradle:publishPlugins --scan\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n      - name: Gradle :ci-release-helper:closeRepository\n        run: >\n          ./gradlew\n          :ci-release-helper:closeRepository --info --scan\n"
    },
    "2022-11-27T15-25-18Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "publish-others": 15,
        "publish-core-native": 20,
        "close-repository": 4
      },
      "line_count": 280,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      enableLocalPublishingTest: 'false'\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publish ${{ env.gradleArgs }}\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n            parallelCompilation: false\n          - os: ubuntu-20.04\n            targetName: linuxX64\n            parallelCompilation: false\n          - os: macos-12\n            targetName: macosX64\n            parallelCompilation: true # macOS machine has 14G\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      enableLocalPublishingTest: 'false'\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};!other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable ${{ env.gradleArgs }}\n\n      # Parallel compilation will exhaust machine memory causing OOM\n      - name: Assemble\n        run: ./gradlew assemble ${{ env.gradleArgs }} \"-Porg.gradle.parallel=${{ matrix.parallelCompilation }}\"\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: Check\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      # Publish native snapshots. Other artifacts are published in publish-mirai-all\n\n      - name: Publish MingwX64\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n  close-repository:\n    runs-on: macos-12\n    needs:\n      - publish-others\n      - publish-core-native\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Close repository\n        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2022-10-19T15-30-20Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "publish-others": 15,
        "publish-core-native": 22,
        "close-repository": 4
      },
      "line_count": 282,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      enableLocalPublishingTest: 'false'\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publish ${{ env.gradleArgs }}\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n          - os: ubuntu-20.04\n            targetName: linuxX64\n          - os: macos-12\n            targetName: macosX64\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      enableLocalPublishingTest: 'false'\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};!other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n          mkdir build-secret-keys\n          echo \"$SONATYPE_USER\" > build-secret-keys/sonatype.key\n          echo \"$SONATYPE_KEY\" >> build-secret-keys/sonatype.key\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}\n          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: Check keys\n        run: ./gradlew ensureMavenCentralAvailable ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-utils for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-utils:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-api for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-api:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: Check Publication\n        run: ./gradlew :mirai-deps-test:check ${{ env.gradleArgs }}\n\n      # Publish native snapshots. Other artifacts are published in publish-mirai-all\n\n      - name: Publish MingwX64 Snapshots\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64 Snapshots\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64 Snapshots\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMavenCentralRepository ${{ env.gradleArgs }}\n\n  close-repository:\n    runs-on: macos-12\n    needs:\n      - publish-others\n      - publish-core-native\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Close repository\n        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2022-11-29T07-24-46Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "initialize-sonatype-stage": 6,
        "publish-others": 17,
        "publish-core-native": 22
      },
      "line_count": 315,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n  initialize-sonatype-stage:\n    name: \"Initialize sonatype staging repository\"\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - run: chmod -R 777 *\n\n      - name: Create publishing staging repository\n        run: ./gradlew runcihelper --args create-stage-repo --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\" \"-Pcihelper.cert.profileid=${{ secrets.SONATYPE_PROFILEID }}\"\n\n      - name: Cache staging repository id\n        uses: actions/upload-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    needs: [ initialize-sonatype-stage ]\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata  ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishAllPublicationsToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n        continue-on-error: true\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n          #            parallelCompilation: false\n          - os: ubuntu-20.04\n            targetName: linuxX64\n          #            parallelCompilation: false\n          - os: macos-12\n            targetName: macosX64\n    #            parallelCompilation: true # macOS machine has 14G\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};~other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m\" \"-Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-utils for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-utils:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-api for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-api:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata ${{ env.gradleArgs }}\n\n      #      # Parallel compilation will exhaust machine memory causing OOM\n      #      - name: Assemble\n      #        run: ./gradlew assemble ${{ env.gradleArgs }} \"-Porg.gradle.parallel=${{ matrix.parallelCompilation }}\"\n\n      - name: Publish MingwX64\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n#\n#  close-repository:\n#    runs-on: macos-12\n#    needs:\n#      - publish-others\n#      - publish-core-native\n#    steps:\n#      - uses: actions/checkout@v2\n#        with:\n#          submodules: 'recursive'\n#\n#      - uses: actions/setup-java@v2\n#        with:\n#          distribution: 'adopt-openj9'\n#          java-version: '17'\n#\n#      - name: Setup Gradle\n#        uses: gradle/gradle-build-action@v2\n#\n#      - name: Close repository\n#        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2022-11-29T07-27-37Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "initialize-sonatype-stage": 6,
        "publish-others": 18,
        "publish-core-native": 24
      },
      "line_count": 324,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n  initialize-sonatype-stage:\n    name: \"Initialize sonatype staging repository\"\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - run: chmod -R 777 *\n\n      - name: Create publishing staging repository\n        run: ./gradlew runcihelper --args create-stage-repo --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\" \"-Pcihelper.cert.profileid=${{ secrets.SONATYPE_PROFILEID }}\"\n\n      - name: Cache staging repository id\n        uses: actions/upload-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    needs: [ initialize-sonatype-stage ]\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata  ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishAllPublicationsToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n        continue-on-error: true\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n          #            parallelCompilation: false\n          - os: ubuntu-20.04\n            targetName: linuxX64\n          #            parallelCompilation: false\n          - os: macos-12\n            targetName: macosX64\n    #            parallelCompilation: true # macOS machine has 14G\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};~other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m\" \"-Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v2\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-utils for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-utils:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-api for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-api:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata ${{ env.gradleArgs }}\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      #      # Parallel compilation will exhaust machine memory causing OOM\n      #      - name: Assemble\n      #        run: ./gradlew assemble ${{ env.gradleArgs }} \"-Porg.gradle.parallel=${{ matrix.parallelCompilation }}\"\n\n      - name: Publish MingwX64\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n#\n#  close-repository:\n#    runs-on: macos-12\n#    needs:\n#      - publish-others\n#      - publish-core-native\n#    steps:\n#      - uses: actions/checkout@v2\n#        with:\n#          submodules: 'recursive'\n#\n#      - uses: actions/setup-java@v2\n#        with:\n#          distribution: 'adopt-openj9'\n#          java-version: '17'\n#\n#      - name: Setup Gradle\n#        uses: gradle/gradle-build-action@v2\n#\n#      - name: Close repository\n#        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2023-02-20T23-56-20Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "initialize-sonatype-stage": 6,
        "publish-others": 18,
        "publish-core-native": 24
      },
      "line_count": 324,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n  initialize-sonatype-stage:\n    name: \"Initialize sonatype staging repository\"\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - run: chmod -R 777 *\n\n      - name: Create publishing staging repository\n        run: ./gradlew runcihelper --args create-stage-repo --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\" \"-Pcihelper.cert.profileid=${{ secrets.SONATYPE_PROFILEID }}\"\n\n      - name: Cache staging repository id\n        uses: actions/upload-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    needs: [ initialize-sonatype-stage ]\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata  ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishAllPublicationsToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n        continue-on-error: true\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n          #            parallelCompilation: false\n          - os: ubuntu-20.04\n            targetName: linuxX64\n          #            parallelCompilation: false\n          - os: macos-12\n            targetName: macosX64\n    #            parallelCompilation: true # macOS machine has 14G\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};~other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m\" \"-Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-utils for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-utils:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-api for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-api:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata ${{ env.gradleArgs }}\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      #      # Parallel compilation will exhaust machine memory causing OOM\n      #      - name: Assemble\n      #        run: ./gradlew assemble ${{ env.gradleArgs }} \"-Porg.gradle.parallel=${{ matrix.parallelCompilation }}\"\n\n      - name: Publish MingwX64\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n#\n#  close-repository:\n#    runs-on: macos-12\n#    needs:\n#      - publish-others\n#      - publish-core-native\n#    steps:\n#      - uses: actions/checkout@v3\n#        with:\n#          submodules: 'recursive'\n#\n#      - uses: actions/setup-java@v3\n#        with:\n#          distribution: 'adopt-openj9'\n#          java-version: '17'\n#\n#      - name: Setup Gradle\n#        uses: gradle/gradle-build-action@v2\n#\n#      - name: Close repository\n#        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2023-05-02T15-17-48Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 3,
      "steps_per_job": {
        "initialize-sonatype-stage": 6,
        "publish-others": 21,
        "publish-core-native": 24
      },
      "line_count": 336,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n  initialize-sonatype-stage:\n    name: \"Initialize sonatype staging repository\"\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - run: chmod -R 777 *\n\n      - name: Create publishing staging repository\n        run: ./gradlew runcihelper --args create-stage-repo --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\" \"-Pcihelper.cert.profileid=${{ secrets.SONATYPE_PROFILEID }}\"\n\n      - name: Cache staging repository id\n        uses: actions/upload-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    needs: [ initialize-sonatype-stage ]\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Android SDK Ubuntu\n        if: ${{ env.isUbuntu == 'true' }}\n        run: 'touch local.properties && echo sdk.dir=/usr/local/lib/android/sdk >> local.properties'\n\n      - name: Setup Android SDK macOS\n        if: ${{ env.isMac == 'true' }}\n        run: 'touch local.properties && echo sdk.dir=/Users/runner/Library/Android/sdk >> local.properties'\n\n      - name: Setup Android SDK Windows\n        if: ${{ env.isWindows == 'true' }}\n        run: 'echo sdk.dir=C:\\Android\\android-sdk >> local.properties'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata  ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishAllPublicationsToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n        continue-on-error: true\n\n  publish-core-native:\n    name: \"Native (${{ matrix.os }})\"\n    needs: [ publish-others ] # Allow MPP metadata to be uploaded first.\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - windows-2022\n          - ubuntu-20.04\n        #          - macos-12 # macOS artifacts published in 'publish-others'\n        include:\n          - os: windows-2022\n            targetName: mingwX64\n          #            parallelCompilation: false\n          - os: ubuntu-20.04\n            targetName: linuxX64\n          #            parallelCompilation: false\n          - os: macos-12\n            targetName: macosX64\n    #            parallelCompilation: true # macOS machine has 14G\n    env:\n      # FIXME there must be two or more targets, or we'll get error on `@OptionalExpectation`\n      # > Declaration annotated with '@OptionalExpectation' can only be used in common module sources\n      gradleArgs: --scan  \"-Dmirai.target=jvm;${{ matrix.targetName }};~other\" \"-Pkotlin.compiler.execution.strategy=in-process\" \"-Dorg.gradle.jvmargs=-Xmx4096m\" \"-Dfile.encoding=UTF-8\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n      VCPKG_DEFAULT_BINARY_CACHE: ${{ startsWith(matrix.os, 'windows') && 'C:\\vcpkg\\binary_cache' || '/usr/local/share/vcpkg/binary_cache' }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'adopt-openj9'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - name: Prepare to cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n\n      - name: Cache vcpkg\n        if: ${{ env.isWindows == 'true' }}\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}\n          key: ${{ runner.os }}-vcpkg-binary-cache-${{ github.job }}\n          restore-keys: |\n            ${{ runner.os }}-vcpkg-binary-cache-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking on macOS\n      - if: ${{ env.isMac == 'true' }}\n        name: Install OpenSSL on Mac OS\n        run: >\n          git clone https://github.com/openssl/openssl.git --recursive &&\n          cd openssl &&\n          git checkout tags/openssl-3.0.3 &&\n          ./Configure --prefix=/opt/openssl --openssldir=/usr/local/ssl &&\n          make &&\n          sudo make install\n\n      # Prepare environment for linking on Ubuntu\n      - if: ${{ env.isUbuntu == 'true' }}\n        name: Install OpenSSL on Ubuntu\n        run: sudo apt install libssl-dev -y\n\n      # Prepare environment for linking on Windows\n      - if: ${{ env.isWindows == 'true' }}\n        name: Setup Memory Environment on Windows\n        run: >\n          wmic pagefileset where name=\"D:\\\\pagefile.sys\" set InitialSize=1024,MaximumSize=9216 &\n          net stop mongodb\n        shell: cmd\n        continue-on-error: true\n\n      - if: ${{ env.isWindows == 'true' }}\n        name: Install OpenSSL & cURL on Windows\n        run: |\n          echo \"set(VCPKG_BUILD_TYPE release)\" | Out-File -FilePath \"$env:VCPKG_INSTALLATION_ROOT\\triplets\\x64-windows.cmake\" -Encoding utf8 -Append\n          vcpkg install openssl:x64-windows curl[core,ssl]:x64-windows\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\crypto.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcrypto.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\ssl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libssl.lib\n          New-Item -Path $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\curl.lib -ItemType SymbolicLink -Value $env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib\\libcurl.lib\n          echo \"$env:VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-utils for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-utils:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core-api for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core-api:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: \"Test mirai-core for ${{ matrix.os }}\"\n        run: ./gradlew :mirai-core:${{ matrix.targetName }}Test ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata ${{ env.gradleArgs }}\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      #      # Parallel compilation will exhaust machine memory causing OOM\n      #      - name: Assemble\n      #        run: ./gradlew assemble ${{ env.gradleArgs }} \"-Porg.gradle.parallel=${{ matrix.parallelCompilation }}\"\n\n      - name: Publish MingwX64\n        if: ${{ env.isWindows == 'true' }}\n        run: ./gradlew publishMingwX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish LinuxX64\n        if: ${{ env.isUbuntu == 'true' }}\n        run: ./gradlew publishLinuxX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Publish macOSX64\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishMacosX64PublicationToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n#\n#  close-repository:\n#    runs-on: macos-12\n#    needs:\n#      - publish-others\n#      - publish-core-native\n#    steps:\n#      - uses: actions/checkout@v3\n#        with:\n#          submodules: 'recursive'\n#\n#      - uses: actions/setup-java@v3\n#        with:\n#          distribution: 'adopt-openj9'\n#          java-version: '17'\n#\n#      - name: Setup Gradle\n#        uses: gradle/gradle-build-action@v2\n#\n#      - name: Close repository\n#        run: ./gradlew :ci-release-helper:closeRepository --scan"
    },
    "2023-06-16T12-40-46Z": {
      "triggers": {
        "push": {
          "tags": [
            "v*"
          ],
          "paths-ignore": [
            "docs/**",
            "mirai-console/docs/**",
            "**/*.md"
          ]
        }
      },
      "num_jobs": 2,
      "steps_per_job": {
        "initialize-sonatype-stage": 6,
        "publish-others": 20
      },
      "line_count": 168,
      "workflow": "name: Release Publish\n\non:\n  push:\n    tags:\n      - 'v*' # \u6b63\u5f0f\u7248\u672c\n    paths-ignore:\n      - 'docs/**'\n      - 'mirai-console/docs/**'\n      - '**/*.md'\n\n\njobs:\n  initialize-sonatype-stage:\n    name: \"Initialize sonatype staging repository\"\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - run: chmod -R 777 *\n\n      - name: Create publishing staging repository\n        run: ./gradlew runcihelper --args create-stage-repo --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\" \"-Pcihelper.cert.profileid=${{ secrets.SONATYPE_PROFILEID }}\"\n\n      - name: Cache staging repository id\n        uses: actions/upload-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n  publish-others:\n    name: \"Others (${{ matrix.os }})\"\n    runs-on: ${{ matrix.os }}\n    needs: [ initialize-sonatype-stage ]\n    strategy:\n      fail-fast: false\n      matrix:\n        os:\n          - macos-12\n    env:\n      # All targets MUST be enabled. See #2270.\n      gradleArgs: --scan \"-Dmirai.target=other\" \"-Pkotlin.compiler.execution.strategy=in-process\"\n      isMac: ${{ startsWith(matrix.os, 'macos') }}\n      isWindows: ${{ startsWith(matrix.os, 'windows') }}\n      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}\n      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: 'recursive'\n\n      - uses: actions/setup-java@v3\n        with:\n          distribution: 'temurin'\n          java-version: '17'\n\n      - name: Keys setup\n        shell: bash\n        run: |\n          mkdir build-gpg-sign\n          echo \"$GPG_PRIVATE\" > build-gpg-sign/keys.gpg\n          echo \"$GPG_PUBLIC_\" > build-gpg-sign/keys.gpg.pub\n        env:\n          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE_KEY }}\n          GPG_PUBLIC_: ${{ secrets.GPG_PUBLIC_KEY }}\n\n      - name: Setup Android SDK Ubuntu\n        if: ${{ env.isUbuntu == 'true' }}\n        run: 'touch local.properties && echo sdk.dir=/usr/local/lib/android/sdk >> local.properties'\n\n      - name: Setup Android SDK macOS\n        if: ${{ env.isMac == 'true' }}\n        run: 'touch local.properties && echo sdk.dir=/Users/runner/Library/Android/sdk >> local.properties'\n\n      - name: Setup Android SDK Windows\n        if: ${{ env.isWindows == 'true' }}\n        run: 'echo sdk.dir=C:\\Android\\android-sdk >> local.properties'\n\n      - name: Setup Gradle\n        uses: gradle/gradle-build-action@v2\n\n      - name: Cache konan\n        uses: pat-s/always-upload-cache@v3.0.11\n        with:\n          path: ~/.konan\n          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}\n          restore-keys: |\n            ${{ runner.os }}-gradle-\n\n      - if: ${{ env.isUnix == 'true' }}\n        run: chmod -R 777 *\n\n      # Prepare environment for linking for macOS\n\n      - name: Clean and download dependencies\n        run: ./gradlew clean ${{ env.gradleArgs }}\n\n      - name: \"Assemble\"\n        run: ./gradlew assemble ${{ env.gradleArgs }}\n\n      - name: Publish Local Artifacts\n        if: ${{ env.enableLocalPublishingTest == 'true' }}\n        run: ./gradlew :mirai-deps-test:publishMiraiArtifactsToMavenLocal ${{ env.gradleArgs }} \"-Dmirai.build.project.version=2.99.0-deps-test\"\n\n      - name: \"Check\"\n        run: ./gradlew check ${{ env.gradleArgs }}\n\n      - if: ${{ env.isMac == 'true' }}\n        name: Ensure KDoc valid\n        run: ./gradlew dokkaHtmlMultiModule ${{ env.gradleArgs }}\n\n      - name: Initialize Publishing Caching Repository\n        run: ./gradlew runcihelper --args sync-maven-metadata  ${{ env.gradleArgs }}\n\n      - name: Publish\n        if: ${{ env.isMac == 'true' }}\n        run: ./gradlew publishAllPublicationsToMiraiStageRepoRepository ${{ env.gradleArgs }}\n\n      - name: Restore staging repository id\n        uses: actions/download-artifact@v3\n        with:\n          name: publish-stage-id\n          path: ci-release-helper/repoid\n\n      - name: Release RAM\n        run: node ci-release-helper/scripts/kill-java.js\n\n      - name: Publish to maven central\n        run: ./gradlew runcihelper --args publish-to-maven-central --scan \"-Pcihelper.cert.username=${{ secrets.SONATYPE_USER }}\" \"-Pcihelper.cert.password=${{ secrets.SONATYPE_KEY }}\"\n\n      - name: Publish Gradle plugin\n        run: ./gradlew\n          :mirai-console-gradle:publishPlugins ${{ env.gradleArgs }}\n          -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}\n          -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}\n        continue-on-error: true\n\n#\n#  close-repository:\n#    runs-on: macos-12\n#    needs:\n#      - publish-others\n#      - publish-core-native\n#    steps:\n#      - uses: actions/checkout@v3\n#        with:\n#          submodules: 'recursive'\n#\n#      - uses: actions/setup-java@v3\n#        with:\n#          distribution: 'adopt-openj9'\n#          java-version: '17'\n#\n#      - name: Setup Gradle\n#        uses: gradle/gradle-build-action@v2\n#\n#      - name: Close repository\n#        run: ./gradlew :ci-release-helper:closeRepository --scan"
    }
  }
}