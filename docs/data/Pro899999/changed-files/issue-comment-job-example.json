{
  "issue-comment-job-example": {
    "2024-01-21T05-54-00Z": [],
    "2025-03-22T22-03-14Z": []
  },
  "metadata": {
    "2024-01-21T05-54-00Z": {
      "triggers": {
        "issue_comment": null
      },
      "num_jobs": 2,
      "steps_per_job": {
        "pr_commented": 12,
        "issue_commented": 12
      },
      "line_count": 178,
      "workflow": "name: Issue Comment Job Example\n\npermissions:\n   contents: read\n\non:\n  issue_comment:\n\njobs:\n  pr_commented:\n    # This job only runs for pull request comments\n    name: PR comment\n    if: ${{ github.event.issue.pull_request }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: |\n          echo A comment on PR $NUMBER\n        env:\n          NUMBER: ${{ github.event.issue.number }}\n\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          submodules: true\n          fetch-depth: 0\n\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n\n      - name: Run changed-files with defaults\n        id: changed-files\n        uses: ./\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Run changed-files for old new filenames test rename\n        id: changed-files-all-old-new-renamed-files\n        uses: ./\n        with:\n          base_sha: d1c0ee4\n          sha: 4d04215\n          fetch_depth: 60000\n          include_all_old_new_renamed_files: true\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test/test rename 1.txt,test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename 1.txt,test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test\\\\test rename 1.txt,test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename 1.txt,test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n  issue_commented:\n    # This job only runs for issue comments\n    name: Issue comment\n    if: ${{ !github.event.issue.pull_request }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: |\n          echo A comment on issue $NUMBER\n        env:\n          NUMBER: ${{ github.event.issue.number }}\n\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          submodules: true\n          fetch-depth: 0\n\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n\n      - name: Run changed-files with defaults\n        id: changed-files\n        uses: ./\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Run changed-files for old new filenames test rename\n        id: changed-files-all-old-new-renamed-files\n        uses: ./\n        with:\n          base_sha: d1c0ee4\n          sha: 4d04215\n          fetch_depth: 60000\n          include_all_old_new_renamed_files: true\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test/test rename 1.txt,test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename 1.txt,test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test\\\\test rename 1.txt,test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename 1.txt,test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n"
    },
    "2025-03-22T22-03-14Z": {
      "triggers": {
        "issue_comment": null
      },
      "num_jobs": 2,
      "steps_per_job": {
        "pr_commented": 12,
        "issue_commented": 12
      },
      "line_count": 178,
      "workflow": "name: Issue Comment Job Example\n\npermissions:\n   contents: read\n\non:\n  issue_comment:\n\njobs:\n  pr_commented:\n    # This job only runs for pull request comments\n    name: PR comment\n    if: ${{ github.event.issue.pull_request }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: |\n          echo A comment on PR $NUMBER\n        env:\n          NUMBER: ${{ github.event.issue.number }}\n\n      - name: Checkout\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          submodules: true\n          fetch-depth: 0\n\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n\n      - name: Run changed-files with defaults\n        id: changed-files\n        uses: ./\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Run changed-files for old new filenames test rename\n        id: changed-files-all-old-new-renamed-files\n        uses: ./\n        with:\n          base_sha: d1c0ee4\n          sha: 4d04215\n          fetch_depth: 60000\n          include_all_old_new_renamed_files: true\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test/test rename 1.txt,test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename 1.txt,test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test\\\\test rename 1.txt,test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename 1.txt,test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n  issue_commented:\n    # This job only runs for issue comments\n    name: Issue comment\n    if: ${{ !github.event.issue.pull_request }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: |\n          echo A comment on issue $NUMBER\n        env:\n          NUMBER: ${{ github.event.issue.number }}\n\n      - name: Checkout\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          submodules: true\n          fetch-depth: 0\n\n      - name: Dump GitHub context\n        env:\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n        run: echo \"$GITHUB_CONTEXT\"\n\n      - name: Run changed-files with defaults\n        id: changed-files\n        uses: ./\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Run changed-files for old new filenames test rename\n        id: changed-files-all-old-new-renamed-files\n        uses: ./\n        with:\n          base_sha: d1c0ee4\n          sha: 4d04215\n          fetch_depth: 60000\n          include_all_old_new_renamed_files: true\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Show output\n        run: |\n          echo '${{ toJSON(steps.changed-files-all-old-new-renamed-files.outputs) }}'\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test/test rename 1.txt,test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename 1.txt,test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check all_old_new_renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files, 'test\\\\test rename 1.txt,test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename 1.txt,test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.all_old_new_renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on non windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test/test rename-1.txt') && runner.os != 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to include (test/test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n\n      - name: Check the renamed_files output on windows platform\n        if: \"!contains(steps.changed-files-all-old-new-renamed-files.outputs.renamed_files, 'test\\\\test rename-1.txt') && runner.os == 'Windows'\"\n        run: |\n          echo \"Invalid output: Expected to not include (test\\\\test rename-1.txt) got (${{ steps.changed-files-all-old-new-renamed-files.outputs.renamed_files }})\"\n          exit 1\n        shell:\n          bash\n"
    }
  }
}